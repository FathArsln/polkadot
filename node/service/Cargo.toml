[package]
name = "polkadot-service"
version = "0.8.3"
authors = ["Parity Technologies <admin@parity.io>"]
edition = "2018"

[dependencies]
# Substrate Client
authority-discovery = { package = "sc-authority-discovery", git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
babe = { package = "sc-consensus-babe", git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
grandpa = { package = "sc-finality-grandpa", git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
sc-block-builder = { git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
sc-chain-spec = { git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
sc-client-api = { git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
sc-client-db = { git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
sc-consensus = { git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
sc-executor = { git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
sc-network = { git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
sc-transaction-pool = { git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
service = { package = "sc-service", git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal", default-features = false }
telemetry = { package = "sc-telemetry", git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }

# Substrate Primitives
authority-discovery-primitives = { package = "sp-authority-discovery", git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
babe-primitives = { package = "sp-consensus-babe", git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
consensus_common = { package = "sp-consensus", git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
grandpa_primitives = { package = "sp-finality-grandpa", git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
inherents = { package = "sp-inherents", git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
sp-api = { git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
sp-block-builder = { git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
sp-blockchain = { git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
sp-core = { git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
sp-io = { git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
sp-keystore = { git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
sp-offchain = { package = "sp-offchain", git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
sp-runtime = { git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
sp-session = { git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
sp-storage = { git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
sp-transaction-pool = { git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
sp-trie = { git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }

# Substrate Pallets
pallet-babe = { git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
pallet-im-online = { git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
pallet-staking = { git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
pallet-transaction-payment-rpc-runtime-api = { git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }

# Substrate Other
frame-benchmarking = { git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
frame-system-rpc-runtime-api = { git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }
prometheus-endpoint = { package = "substrate-prometheus-endpoint", git = "https://github.com/paritytech/substrate", branch = "seun-babe-manual-seal" }

# External Crates
codec = { package = "parity-scale-codec", version = "1.3.4" }
futures = "0.3.4"
hex-literal = "0.2.1"
lazy_static = "1.4.0"
log = "0.4.8"
parking_lot = "0.9.0"
serde = { version = "1.0.102", features = ["derive"] }
slog = "2.5.2"

# Polkadot
polkadot-node-core-proposer = { path = "../core/proposer" }
polkadot-overseer = { path = "../overseer" }
polkadot-parachain = { path = "../../parachain" }
polkadot-primitives = { path = "../../primitives" }
polkadot-rpc = { path = "../../rpc" }
polkadot-subsystem = { package = "polkadot-node-subsystem", path = "../subsystem" }
polkadot-node-subsystem-util = { path = "../subsystem-util" }

# Polkadot Runtimes
polkadot-runtime = { path = "../../runtime/polkadot" }
kusama-runtime = { path = "../../runtime/kusama" }
westend-runtime = { path = "../../runtime/westend" }
rococo-runtime = { package = "rococo-v1-runtime", path = "../../runtime/rococo-v1" }

# Polkadot Subsystems
polkadot-availability-bitfield-distribution = { path = "../network/bitfield-distribution", optional = true }
polkadot-availability-distribution = { path = "../network/availability-distribution", optional = true }
polkadot-collator-protocol = { path = "../network/collator-protocol", optional = true }
polkadot-network-bridge = { path = "../network/bridge", optional = true }
polkadot-node-collation-generation = { path = "../collation-generation", optional = true }
polkadot-node-core-av-store = { path = "../core/av-store", optional = true }
polkadot-node-core-backing = { path = "../core/backing", optional = true }
polkadot-node-core-bitfield-signing = { path = "../core/bitfield-signing", optional = true }
polkadot-node-core-candidate-selection = { path = "../core/candidate-selection", optional = true }
polkadot-node-core-candidate-validation = { path = "../core/candidate-validation", optional = true }
polkadot-node-core-chain-api = { path = "../core/chain-api", optional = true }
polkadot-node-core-provisioner = { path = "../core/provisioner", optional = true }
polkadot-node-core-runtime-api = { path = "../core/runtime-api", optional = true }
polkadot-pov-distribution = { path = "../network/pov-distribution", optional = true }
polkadot-statement-distribution = { path = "../network/statement-distribution", optional = true }

[dev-dependencies]
polkadot-test-client = { path = "../test/client" }
env_logger = "0.8.1"

[features]
default = ["db", "full-node"]
db = ["service/db"]
runtime-benchmarks = ["polkadot-runtime/runtime-benchmarks", "kusama-runtime/runtime-benchmarks", "westend-runtime/runtime-benchmarks"]
full-node = [
	"polkadot-availability-bitfield-distribution",
	"polkadot-availability-distribution",
	"polkadot-collator-protocol",
	"polkadot-network-bridge",
	"polkadot-node-collation-generation",
	"polkadot-node-core-av-store",
	"polkadot-node-core-backing",
	"polkadot-node-core-bitfield-signing",
	"polkadot-node-core-candidate-selection",
	"polkadot-node-core-candidate-validation",
	"polkadot-node-core-chain-api",
	"polkadot-node-core-provisioner",
	"polkadot-node-core-runtime-api",
	"polkadot-pov-distribution",
	"polkadot-statement-distribution",
]
